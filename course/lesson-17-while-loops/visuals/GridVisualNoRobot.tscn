[gd_scene load_steps=4 format=2]

[ext_resource path="res://course/common/Robot.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=2]
script/source = "extends Node2D

export var board_width := 3 setget set_grid_width
export var board_height := 3 setget set_grid_height
export var cell_size := 64
export var line_width := 4

var grid_size := Vector2(board_width, board_height)

onready var _label := $Label
onready var _robot := $Robot

func _ready() -> void:
	_robot.cell_size = cell_size
	_robot.cell = Vector2(0, 1)
	update()


func _draw() -> void:
	for x in range(grid_size.x):
		for y in range(grid_size.y):
			draw_rect(Rect2(Vector2(x * cell_size, y * cell_size), Vector2.ONE * cell_size), Color.white, false, line_width)


func set_grid_width(width):
	grid_size.x = width
	_update_label()
	update()


func set_grid_height(height):
	grid_size.y = height
	_update_label()
	update()


func _update_label():
	if not _label:
		yield(self, \"ready\")
	
	_label.text = \"board_size = Vector2%s\" % [grid_size]

func hide_robot():
	_robot.visible = false
"

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


var cell := Vector2(0, 0) setget set_cell, get_cell
var cell_size := 96


func set_cell(new_cell: Vector2) -> void:
	cell = new_cell
	_animate_movement(cell, new_cell)


func get_cell() -> Vector2:
	return cell


func _animate_movement(old_cell, new_cell) -> void:
	position = new_cell * cell_size + Vector2(cell_size/2, 12)
"

[node name="GridVisual" type="Node2D"]
position = Vector2( 100, 100 )
script = SubResource( 2 )

[node name="Robot" parent="." instance=ExtResource( 2 )]
visible = false
scale = Vector2( 0.75, 0.75 )
script = SubResource( 1 )

[node name="Label" type="Label" parent="."]
margin_left = 287.0
margin_top = -54.0
margin_right = 440.0
margin_bottom = -40.0
text = "grid_size = Vector2(3, 3)"
__meta__ = {
"_edit_use_anchors_": false
}
