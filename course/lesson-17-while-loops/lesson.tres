[gd_resource type="Resource" load_steps=23 format=2]

[ext_resource path="res://resources/Lesson.gd" type="Script" id=1]
[ext_resource path="res://resources/ContentBlock.gd" type="Script" id=2]
[ext_resource path="res://resources/QuizChoice.gd" type="Script" id=3]
[ext_resource path="res://course/Documentation.tres" type="Resource" id=4]
[ext_resource path="res://resources/Practice.gd" type="Script" id=5]

[sub_resource type="Resource" id=1]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-DizKUdOC.tres"
title = ""
type = 0
text = "Our new knowledge of vectors can help move the robot move in a grid.

We can define the size of a board using a [code]Vector2[/code].

Each square is a [i]cell[/i]."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=2]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-GjB7tKRH.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/ExampleGrid.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=3]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-Q2XNwQMq.tres"
title = ""
type = 0
text = "Let's add our robot onto the grid.

We can change the cell of the robot by adding a [code]Vector2[/code].

In the following example, we order the robot to move to the right so it stops at the end of the board.

To show how the robot moves, we animate the robot so you can see each instruction. Otherwise, the robot would teleport instantly."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=4]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-AYVjotxF.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/ExampleRobotMoveGrid.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=7]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-fyqdYOex.tres"
title = ""
type = 0
text = "The above code works for a pre-defined board with a width of [code]4[/code], but the [code]move_to_end()[/code] function wouldn't work if the size of the board was different. 

The robot would either stop before the end, or go too far.

To implement a general solution for all board sizes, the robot needs to repeat its movement until it gets to the end.

For code that repeats, we use [i]loops[/i].

While loops make the computer repeat a block of code until you meet a specific condition or decide to break from the loop.

Here's how we use a while loop."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=13]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-c7DDizKU.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/CodeWhileLoop.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=14]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-dOCQiGjB.tres"
title = ""
type = 0
text = "We use the variable [code]number[/code] to keep track of how many loops the while loop completes.

Each time we go through the while loop, we add [code]1[/code] to [code]number[/code].

The while loop keeps running for as long as [code]number[/code] is less than [code]10[/code].

You can see the following code is executed four times in the console."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=15]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-izKUdOCQ.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/PrintWhileLoop.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=16]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-kGx0c7DD.tres"
title = ""
type = 1
text = "We use while loops every time we need to loop an unknown number of times.

For example, games run in a loop that typically generates 60 images per second until the user closes the game. This is possible thanks to while loops.

The computer also reads the code you write using a while loop because it doesn't know the length of your code in advance."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=17]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-iGjB7tKR.tres"
title = ""
type = 0
text = "Let's apply this to our [code]move_to_end()[/code] function.

This time, we compare the number of loops to the width of the board. We keep looping through until we reach the width of the board.

Note we only have to move one less than the board width because the robot is already on the first cell."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=19]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-QMqAYVjo.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/CodeWhileRobot.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=18]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-HJMQ2XNw.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/ExampleGridWhile.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=8]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-RjTRhZN4.tres"
title = "While loops can cause issues"
type = 0
text = "If you're not careful, your while loop can run infinitely. In that case, the application will freeze.

Take a look at this code example."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=9]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-xlTtcyhc.tres"
title = ""
type = 0
text = ""
visual_element_path = "visuals/CodeWhileLoopInfinite.tscn"
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=10]
script = ExtResource( 3 )
quiz_id = "res://course/lesson-17-while-loops/quiz-v5tT6n1T.tres"
question = "What would happen if the computer tried to run the code above?"
content_bbcode = ""
hint = ""
explanation_bbcode = "Because [code]number[/code] isn't incremented within the while loop, it can't go above [code]100[/code].

Since there's no way to exit the while loop, the computer will attempt to draw squares for as long as the program is running, often resulting in a crash."
answer_options = [ "It would draw squares infinitely until the program is terminated", "It would draw 100 squares", "It would draw 20 squares" ]
valid_answers = [ "It would draw squares infinitely until the program is terminated" ]
is_multiple_choice = false
do_shuffle_answers = true

[sub_resource type="Resource" id=11]
script = ExtResource( 2 )
content_id = "res://course/lesson-17-while-loops/content-Ib5BnVHA.tres"
title = ""
type = 0
text = "In the next lesson, you will see a much safer kind of loop that does not have this limitation.

In the practices you'll learn how to use while loops because they're still useful to know."
visual_element_path = ""
reverse_blocks = false
has_separator = false

[sub_resource type="Resource" id=12]
script = ExtResource( 5 )
practice_id = "res://course/lesson-17-while-loops/practice-lkGx0c7D.tres"
title = "Simulating a battle using a while loop"
goal = "It's time to fight!

Add to the [code]simulate_battle()[/code] function to gradually lower the health of the robot. 

While [code]health[/code] is greater than [code]0[/code], subtract [code]turtle_power[/code] from [code]health[/code]."
starting_code = "func simulate_battle():
	pass"
hints = PoolStringArray(  )
validator_script_path = "while_battle/TestWhileBattle.gd"
script_slice_path = "while_battle/WhileBattle.live-editor/slices/WhileBattle.battle.slice.tres"
documentation_references = PoolStringArray(  )
documentation_resource = ExtResource( 4 )
description = "We use a while loop to have our turtle attack the robot for as long as it has more than zero health."

[resource]
script = ExtResource( 1 )
title = "Introduction to While Loops"
content_blocks = [ SubResource( 1 ), SubResource( 2 ), SubResource( 3 ), SubResource( 4 ), SubResource( 7 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 19 ), SubResource( 18 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ) ]
practices = [ SubResource( 12 ) ]
